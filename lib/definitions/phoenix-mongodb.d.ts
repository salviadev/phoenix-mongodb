// Generated by dts-bundle v0.4.3
// Dependencies for this module:
//   ../../stream

declare module 'phoenix-mongodb' {
    import * as stream from 'stream';
    export var db: {
        connectionString: (configMongo: {
            port?: number;
            host?: string;
            user?: string;
            password?: string;
            database?: string;
            options?: any;
        }) => string;
    };
    export var schema: {
        createCollections: (connectionUri: string, schemas: any[]) => Promise<void>;
        importCollectionFromFile: (connectionUri: string, schema: any, file: string, options?: {
            truncate: boolean;
            onImported: any;
        }, tenantId?: number) => Promise<void>;
        importCollectionFromStream: (connectionUri: string, schema: any, stream: stream.Readable, options?: {
            truncate: boolean;
            onImported: any;
        }, tenantId?: number) => Promise<void>;
    };
    export var upload: {
        uploadBinaryProperty: (uri: string, schema: any, pk: any, propertyName: string, fileName: string, contentType: string, stream: any, cb: (ex: any) => void) => void;
        downloadBinaryProperty: (uri: string, schema: any, pk: any, propertyName: string, res: any, cb: (ex: any) => void) => void;
    };
    export var odata: {
        execQuery: (connetionString: string, collectionName: string, schema: any, filter: any, options: any) => Promise<any>;
        execQueryId: (connetionString: string, collectionName: string, propertyName: string, schema: any, primaryKey: any, options: any) => Promise<any>;
    };
}

