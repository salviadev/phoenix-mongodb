// Generated by dts-bundle v0.4.3
// Dependencies for this module:
//   ../../stream
//   ../../phoenix-odata

declare module 'phoenix-mongodb' {
    import * as stream from 'stream';
    import { OdataParsedUri } from 'phoenix-odata';
    export var schema: {
        createCollections: (settings: any, connections: any, schemas: any[]) => Promise<void>;
        importCollectionFromFile: (settings: any, connections: any, schema: any, file: string, options?: {
            truncate: boolean;
            onImported: any;
            format?: string;
        }, tenantId?: number) => Promise<void>;
        importCollectionFromStream: (settings: any, connections: any, schema: any, stream: stream.Readable, options?: {
            truncate: boolean;
            onImported: any;
            format?: string;
        }, tenantId?: number) => Promise<void>;
    };
    export var upload: {
        uploadBinaryProperty: (settings: any, connections: any, schema: any, odataUri: OdataParsedUri, fileName: string, contentType: string, stream: any) => Promise<void>;
        downloadBinaryProperty: (settings: any, connections: any, schema: any, odataUri: OdataParsedUri, res: any) => Promise<void>;
    };
    export var odata: {
        execQuery: (settings: any, connections: any, schema: any, odataUri: OdataParsedUri) => Promise<any>;
        execQueryId: (settings: any, connections: any, schema: any, odataUri: OdataParsedUri) => Promise<any>;
        execDelete: (settings: any, connections: any, schema: any, odataUri: OdataParsedUri) => Promise<void>;
    };
}

